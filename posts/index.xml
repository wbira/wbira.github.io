<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Vi Valdi</title>
    <link>https://wbira.github.io/posts/</link>
    <description>Recent content in Posts on Vi Valdi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wbira.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go generator pattern</title>
      <link>https://wbira.github.io/posts/go-generators/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wbira.github.io/posts/go-generators/</guid>
      <description>&lt;p&gt;In this post I would like to present generator pattern in Go.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Monitoring in AWS</title>
      <link>https://wbira.github.io/posts/cloudwatch-dashboard/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wbira.github.io/posts/cloudwatch-dashboard/</guid>
      <description>&lt;p&gt;Nowadays, to create a successful project we need a bit more than developed application. We should have CI/CD solution to deliver changes to upper environments. To prove that system still works, we can run set of e2e tests, but there&amp;rsquo;s one more thing, that we should set up in our system.
And this missing thing is monitoring, which will help us to keep control over health and performance of an application. It may help keep optimal percentage of resources utilization in a cloud, that will lead to reduced costs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Http Polling</title>
      <link>https://wbira.github.io/posts/http-pooling/</link>
      <pubDate>Thu, 26 Mar 2020 21:17:49 +0100</pubDate>
      
      <guid>https://wbira.github.io/posts/http-pooling/</guid>
      <description>&lt;p&gt;Hello! Today&amp;rsquo;s post will be a quick one. I&amp;rsquo;ll show you small utility, that I created for testing HTTP long-polling based API.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lambda provisioned concurrency</title>
      <link>https://wbira.github.io/posts/lambda-provisioned-concurrency/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wbira.github.io/posts/lambda-provisioned-concurrency/</guid>
      <description>What is Provisioned Concurrency for AWS Lambda? AWS Lambda as a main building block of serverless world. Overall serverless computing is great for various use cases, but still has some limitations. One of them could be latency. When lambda hadn&amp;rsquo;t been used for some time an execution environment needs to be created. It can take from 200ms to even 600ms, depending on chosen language. So when latency is critical for your application, additional 600ms might be painful.</description>
    </item>
    
    <item>
      <title>Welcome!</title>
      <link>https://wbira.github.io/posts/my-first-post/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wbira.github.io/posts/my-first-post/</guid>
      <description>Here is my new super blog. I will try to share my IT knowladge here.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wbira.github.io/posts/fargate-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wbira.github.io/posts/fargate-basics/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>